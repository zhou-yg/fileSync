// Generated by CoffeeScript 1.8.0
(function() {
  var DirecotrySet, dirObjArr, filesArr, fs, readFiles, setDirs, setFileWatch;

  fs = require('fs');

  DirecotrySet = require('../jslibs/directorySet.js');

  dirObjArr = [];

  filesArr = [];

  setDirs = function(_dirObjArr) {
    dirObjArr = _dirObjArr;
    return readFiles();
  };

  readFiles = function() {
    var readAllFilesSync;
    readAllFilesSync = function(_rootPath, _dirObj, _tier) {
      var filenameArr;
      _tier++;
      filenameArr = fs.readdirSync(_rootPath + '\\' + _dirObj.dirPath);
      return filenameArr.forEach(function(_f) {
        var intactPath, stat;
        intactPath = _rootPath + '\\' + _dirObj.dirPath + '\\' + _f;
        stat = fs.statSync(intactPath);
        if (stat.isDirectory()) {
          intactPath = new DirecotrySet(_rootPath, _f);
          _dirObj.append(intactPath);
          return readAllFilesSync(_rootPath, intactPath, _tier);
        } else {
          return _dirObj.push(_f);
        }
      });
    };
    dirObjArr.forEach(function(_dirObj) {
      return readAllFilesSync(_dirObj.rootPath, _dirObj, 0);
    });
    setFileWatch();
  };

  setFileWatch = function() {
    var fwMap;
    fwMap = {};
    dirObjArr.forEach(function(_dirObj) {
      var allDir, dir, _i, _len, _results;
      allDir = _dirObj.iterateObj(0);
      _results = [];
      for (_i = 0, _len = allDir.length; _i < _len; _i++) {
        dir = allDir[_i];
        _results.push((function() {
          var allFiles, baseDirPath, f, myPath, myRootPath, mydir, _j, _len1, _results1;
          mydir = dir.clone();
          myRootPath = mydir.rootPath;
          baseDirPath = mydir.dirPath;
          allFiles = mydir.display(1);
          myPath = myRootPath + baseDirPath;
          _results1 = [];
          for (_j = 0, _len1 = allFiles.length; _j < _len1; _j++) {
            f = allFiles[_j];
            _results1.push((function() {
              var fileChangeTrigger, fileWatcher;
              fileChangeTrigger = 1;
              fileWatcher = function(_evt, _filename) {
                if (_evt === 'change' && fileChangeTrigger++ % 2 === 0) {
                  return dirObjArr.forEach(function(__dirObj) {
                    var targetDir, targetPath;
                    targetDir = __dirObj.searchDirByPath(baseDirPath);
                    targetPath = targetDir.rootPath + '\\' + targetDir.dirPath + '\\' + _filename;
                    if (targetPath !== f) {
                      fwMap[targetPath].close();
                      return fs.readFile(f, function(_err, _data) {
                        return fs.writeFile(targetPath, _data, function(_err) {
                          return fwMap[targetPath] = fs.watch(f, fileWatcher);
                        });
                      });
                    }
                  });
                }
              };
              return fwMap[f] = fs.watch(f, fileWatcher);
            })());
          }
          return _results1;
        })());
      }
      return _results;
    });
  };

  exports.setDirs = setDirs;

}).call(this);

//# sourceMappingURL=watchFile.js.map
